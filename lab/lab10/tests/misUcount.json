{"answerDict": {"scm> (define a '(1))\na\nscm> a\n(1)\nscm> (define b (cons 2 a))\nb\nscm> b\nLOCKED_ANSWER\nscm> (define c (list 3 b))\nLOCKED_ANSWER\nscm> c\nLOCKED_ANSWER\nscm> (car c)\nLOCKED_ANSWER\nscm> (cdr c)\nLOCKED_ANSWER\nscm> (car (car (cdr c)))\nLOCKED_ANSWER\nscm> (cdr (car (cdr c)))\nLOCKED_ANSWER\n": ["['(2 . 1)']", "['(2 . a)']"], "scm> (define a '(1))\na\nscm> a\n(1)\nscm> (define b (cons 2 a))\nLOCKED_ANSWER\nscm> b\nLOCKED_ANSWER\nscm> (define c (list 3 b))\nLOCKED_ANSWER\nscm> c\nLOCKED_ANSWER\nscm> (car c)\nLOCKED_ANSWER\nscm> (cdr c)\nLOCKED_ANSWER\nscm> (car (car (cdr c)))\nLOCKED_ANSWER\nscm> (cdr (car (cdr c)))\nLOCKED_ANSWER\n": ["['(2 1)']", "['(2 . 1)']"], "scm> (define a '(1))\na\nscm> a\n(1)\nscm> (define b (cons 2 a))\nb\nscm> b\n(2 1)\nscm> (define c (list 3 b))\nc\nscm> c\n(3 (2 1))\nscm> (car c)\n3\nscm> (cdr c)\n((2 1))\nscm> (car (car (cdr c)))\n2\nscm> (cdr (car (cdr c)))\nLOCKED_ANSWER\n": ["['1']", "['(!)']", "['(1)_']"], "scm> (define a '(1))\na\nscm> a\n(1)\nscm> (define b (cons 2 a))\nb\nscm> b\n(2 1)\nscm> (define c (list 3 b))\nc\nscm> c\nLOCKED_ANSWER\nscm> (car c)\nLOCKED_ANSWER\nscm> (cdr c)\nLOCKED_ANSWER\nscm> (car (car (cdr c)))\nLOCKED_ANSWER\nscm> (cdr (car (cdr c)))\nLOCKED_ANSWER\n": ["['(3 2 1)']"], "scm> (define a '(1))\na\nscm> a\n(1)\nscm> (define b (cons 2 a))\nb\nscm> b\n(2 1)\nscm> (define c (list 3 b))\nc\nscm> c\n(3 (2 1))\nscm> (car c)\n3\nscm> (cdr c)\nLOCKED_ANSWER\nscm> (car (car (cdr c)))\nLOCKED_ANSWER\nscm> (cdr (car (cdr c)))\nLOCKED_ANSWER\n": ["['(2 1)']", "['b']", "['((21))']"], "scm> lst\nLOCKED_ANSWER\n": ["['((1) (2 ((3 . 4) 5))))']"], "scm> (eq? '(1 . (2 . 3)) (list 1 (cons 2 3)))\nLOCKED_ANSWER\n": ["['True']"], "scm> (define a '(1))\na\nscm> a\n(1)\nscm> (define b (cons 2 a))\nb\nscm> b\n(2 1)\nscm> (define c (list 3 b))\nc\nscm> c\n(3 (2 1))\nscm> (car c)\nLOCKED_ANSWER\nscm> (cdr c)\nLOCKED_ANSWER\nscm> (car (car (cdr c)))\nLOCKED_ANSWER\nscm> (cdr (car (cdr c)))\nLOCKED_ANSWER\n": ["['((2 1))']"], "scm> (cons 1 '(list 2 3))\nLOCKED_ANSWER\n": ["['(1 2 3)']", "['(1 . list 2 3)']", "['(1. (list 2 3))']", "['(1 . list(2 3))']", "['(1 list(2 3))']"]}, "countData": {"scmlstreductionmisapplied-schemelistformat": 1, "scmnestedlstisflat": 1, "scmsingleitemnestedlstislst-schemelistfunction": 2, "scmquotedcodeiseval-schemequotedlist": 1, "scmbindvartovarname": 2, "scmlstdsntneedouterparen-schemelistformat": 2, "scmcdrrtnlstelem-schemecdr": 2, "scmnestedlstisflat-schemequotedlist": 1, "scmdefrtnnotname-schemedefine": 2, "scmquotedcodeiseval": 1, "scmnestedlstisflat-schemelistfunction": 1, "scmlstdsntneedouterparen": 2, "scmconswithlstmakesmallst-schemecons": 2, "scmdefrtnnotname": 2, "scmconswithlstmakesmallst": 2, "scmnestedlstisflat-schemecons": 1, "scmbindvartovarname-schemedefine": 2, "scmbindvartovarname-schemeevalvar": 2, "scmcdrrtnlstelem": 2, "scmlstreductionmisapplied": 1, "scmsingleitemnestedlstislst": 2}}